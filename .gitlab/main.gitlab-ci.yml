variables:
  # Make Git clone the submodules as well.
  GIT_SUBMODULE_STRATEGY: recursive
  # Tags for selecting a runner.
  SF_TARGET_ARCH: "amd64"
  SF_TARGET_OS: "linux"
  # Name of the branch that allows running deploying to production. (set from CI/CD settings)
  #SF_RELEASE_BRANCH: "main"

workflow:
  # Only run pipeline on protected branches.
  rules:
    # No pipeline when commit message starts with an exclamation mark '!'.
    - if: '$SF_SIGNAL == "skip"'
      when: never
    # Run pipeline initiated by a merge request event.
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
    # Run pipeline initiated by the web application.
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: always
    # Prevent double pipeline when having this workflow.
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_PROTECTED == "true"'
      when: always
    - when: never

stages:
  - check
  - toolchain

# Defaults for all jobs.
default:
  # Tags determine the selection of a runner.
  tags:
    - cplusplus
    - "${SF_TARGET_OS}"
    - "${SF_TARGET_ARCH}"

# Reports the environment variables for debugging.
check-env:
  stage: check
  script:
    - echo "Working Directory=$(pwd)"
    - echo "Environment Dump" && printenv

# Does a cache and artifact check.
cache-test:
  stage: toolchain
  needs: [check-env]
  rules:
    # Run when signal is test.
    - if: '$SF_SIGNAL != "test"'
      when: never
    - when: always
  variables:
    # Set the toolchain to use.
    SF_TOOLCHAIN: "toolchain"
    SF_BUILD_TYPE: "debug"
    SF_DIR_BIN: "bin/lnx64"

  trigger:
    forward:
      yaml_variables: true
    include: .gitlab/cache-test.gitlab-ci.yml

linux-gnu:
  stage: toolchain
  needs: [check-env]
  rules:
    # Skip if signal is "test"
    - if: '$SF_SIGNAL == "test"'
      when: never
    - when: always
  variables:
    # Set the toolchain to use.
    SF_TOOLCHAIN: "gnu"
    SF_BUILD_TYPE: "debug"
    SF_DIR_BIN: "bin/lnx64"
  trigger:
    forward:
      yaml_variables: true
    include: .gitlab/cmake-build.gitlab-ci.yml

linux-gw:
  stage: toolchain
  needs: [check-env]
  rules:
    # Skip if signal is "test"
    - if: '$SF_SIGNAL == "test"'
      when: never
    - when: always
  variables:
    # Set the toolchain to use.
    SF_TOOLCHAIN: "gw"
    SF_BUILD_TYPE: "debug"
    SF_DIR_BIN: "bin/win64"
  trigger:
    forward:
      yaml_variables: true
    include: .gitlab/cmake-build.gitlab-ci.yml
